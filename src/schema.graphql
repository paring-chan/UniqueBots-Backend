type Mutation {
    login(code: String!): String
    addBot(id: String!, brief: String!, description: String!, prefix: String!, invite: String, library: String!): Boolean
}

type Query {
    me: User
    admin: Admin
    user(id: String!): User
    bot(id: String!): Bot
    bots(page: Int, sort: BotSortUnit): PaginatedBotList!
    botAccount: BotAccount
}

type Badge {
    id: String!
    icon: String!
    name: String!
}

type User {
    id: String!
    username: String!
    discriminator: String!
    tag: String!
    avatarURL: String!
    admin: Boolean!
    badges: [Badge]!
    bots(page: Int!): PaginatedBotList!
    bot(id: String!): Bot
    judges(page: Int): PaginatedJudges
}

type Bot {
    id: String!
    tag: String
    guilds: Int!
    status: String!
    brief: String!
    description: String!
    avatar: String
    prefix: String!
    invite: String!
    locked: Boolean!
    discordVerified: Boolean!
    owner: User!
    token: String
    regenerateToken: Boolean!
    patch(brief: String!, description: String!, prefix: String!, invite: String!, lock: Boolean!, library: String!): Boolean
    library: String!
    heartCount: Int!
    toggleHeart: Boolean!
    heartClicked: Boolean!
}

type AdminBot {
    id: String!
    tag: String
    approved: Boolean!
    status: String!
    brief: String!
    description: String!
    delete: Boolean!
    prefix: String!
}

type AdminUser {
    user: User!
    promote: Boolean!
    removeMod: Boolean!
}

type AdminJudge {
    approve : Boolean
    deny(reason: String!): Boolean
    id: String!
    requester: String!
    approved: Boolean!
    bot: AdminBot
}

type PaginatedBotList {
    pages: Int!
    result: [Bot]!
}

type Admin {
    bots: [AdminBot]!
    judges(pending: Boolean): [AdminJudge]!
    judge(id: String!): AdminJudge
    users: [AdminUser]!
    user(id: String!): AdminUser
    bot(id: String!): AdminBot
    audits: [Audit]!
}

type Audit {
    user: User
    msg: String!
    timestamp: String!
}

enum BotSortUnit {
    servers
}

type BotAccount {
    id: String!
    guilds(patch: Int): Int!
}

type PaginatedJudges {
    pages: Int!
    items: [Judge]!
}

type Judge {
    id: String!
    approved: Boolean!
    pending: Boolean!
    reason: String
}
